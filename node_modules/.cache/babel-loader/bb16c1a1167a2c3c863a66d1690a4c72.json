{"ast":null,"code":"var _jsxFileName = \"/home/raquel/Wild code school/meus/star-love/src/Match.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport ActualUser from './ActualUser.js';\n\nclass Match extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPersons = () => {\n      fetch('https://melroune.github.io/starwars-api/api/all.json').then(response => response.json()).then(result => {\n        this.setState({\n          starWarsPersons: result,\n          isLoading: false,\n          isError: false\n        }, this.findMatches);\n      }, error => {\n        this.setState({\n          isLoading: false,\n          isError: true\n        });\n      });\n    };\n\n    this.findMatches = () => {\n      // Find all matches that fit into the criteria\n      // Store it on this.state.matches\n      let filteredResults; // var specie = window.myPreferences.favSpecies;\n\n      var affiliation = window.myPreferences.favAffiliation; // var homeworld= window.myPreferences.favHomeworld;\n      // Mass between 20 and 50\n      // filteredResults = this.state.starWarsPersons.filter(element => {\n      //     return element.mass > 20 && element.mass < 50;\n      // });\n      // Filter by specie\n      // filteredResults = this.state.starWarsPersons.filter(person => {\n      //     return person.species.includes(specie);\n      // });\n      // Filter by affiliation\n\n      filteredResults = this.state.starWarsPersons.filter(person => {\n        return person.affiliations.includes(affiliation);\n      });\n      this.setState({\n        matches: filteredResults\n      });\n    };\n\n    this.state = {\n      starWarsPersons: [],\n      matches: [],\n      isLoading: true,\n      isError: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(window.myPreferences);\n    this.getPersons();\n  }\n\n  render() {\n    console.log(this.state.match);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Hello \", React.createElement(ActualUser, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \" you got these options:\"), this.state.matches.map(element => {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" Name: \", element.name, \" \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Species: \", element.species, \" \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Affiliations:\", [element.affiliations].map(item => {\n        return React.createElement(\"li\", {\n          className: \"affiliations\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \" \", item);\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"mass: \", element.mass, \"kg \"));\n    }));\n  }\n\n}\n\nexport default Match;","map":{"version":3,"sources":["/home/raquel/Wild code school/meus/star-love/src/Match.js"],"names":["React","Component","ActualUser","Match","constructor","props","getPersons","fetch","then","response","json","result","setState","starWarsPersons","isLoading","isError","findMatches","error","filteredResults","affiliation","window","myPreferences","favAffiliation","state","filter","person","affiliations","includes","matches","componentDidMount","console","log","render","match","map","element","name","species","item","mass"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,UAlBmB,GAkBN,MAAM;AACfC,MAAAA,KAAK,CAAC,sDAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR,aAAKC,QAAL,CAAc;AACVC,UAAAA,eAAe,EAAEF,MADP;AAEVG,UAAAA,SAAS,EAAE,KAFD;AAGVC,UAAAA,OAAO,EAAE;AAHC,SAAd,EAIG,KAAKC,WAJR;AAKH,OATT,EAUSC,KAAD,IAAW;AACP,aAAKL,QAAL,CAAc;AACVE,UAAAA,SAAS,EAAE,KADD;AAEVC,UAAAA,OAAO,EAAE;AAFC,SAAd;AAIH,OAfT;AAiBH,KApCkB;;AAAA,SAsCnBC,WAtCmB,GAsCL,MAAM;AAChB;AACA;AAGA,UAAIE,eAAJ,CALgB,CAOhB;;AACA,UAAIC,WAAW,GAAGC,MAAM,CAACC,aAAP,CAAqBC,cAAvC,CARgB,CAShB;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;;AACAJ,MAAAA,eAAe,GAAG,KAAKK,KAAL,CAAWV,eAAX,CAA2BW,MAA3B,CAAkCC,MAAM,IAAI;AAC1D,eAAOA,MAAM,CAACC,YAAP,CAAoBC,QAApB,CAA6BR,WAA7B,CAAP;AACH,OAFiB,CAAlB;AAIA,WAAKP,QAAL,CAAc;AACVgB,QAAAA,OAAO,EAAEV;AADC,OAAd;AAGH,KArEkB;;AAEf,SAAKK,KAAL,GAAa;AACTV,MAAAA,eAAe,EAAE,EADR;AAETe,MAAAA,OAAO,EAAE,EAFA;AAGTd,MAAAA,SAAS,EAAE,IAHF;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AAEDc,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACC,aAAnB;AAEA,SAAKf,UAAL;AACH;;AAyDD0B,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWU,KAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV,4BADJ,EAEK,KAAKV,KAAL,CAAWK,OAAX,CAAmBM,GAAnB,CAAwBC,OAAD,IAAa;AACjC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,OAAO,CAACC,IAArB,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAeD,OAAO,CAACE,OAAvB,MAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAGA,CAACF,OAAO,CAACT,YAAT,EAAuBQ,GAAvB,CAA4BI,IAAD,IAC3B;AAAE,eAAQ;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA+BA,IAA/B,CAAR;AAAoD,OADtD,CAHA,CADR,CAJJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYH,OAAO,CAACI,IAApB,QAdJ,CADJ;AAkBH,KAnBA,CAFL,CADJ;AA2BH;;AArGyB;;AA4G9B,eAAepC,KAAf","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport ActualUser from './ActualUser.js';\n\nclass Match extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            starWarsPersons: [],\n            matches: [],\n            isLoading: true,\n            isError: false\n        }\n    }\n\n    componentDidMount() {\n        console.log(window.myPreferences);\n\n        this.getPersons();\n    }\n\n\n\n    getPersons = () => {\n        fetch('https://melroune.github.io/starwars-api/api/all.json')\n            .then(response => response.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        starWarsPersons: result,\n                        isLoading: false,\n                        isError: false,\n                    }, this.findMatches);\n                },\n                (error) => {\n                    this.setState({\n                        isLoading: false,\n                        isError: true\n                    });\n                }\n            )\n    }\n\n    findMatches = () => {\n        // Find all matches that fit into the criteria\n        // Store it on this.state.matches\n\n\n        let filteredResults;\n\n        // var specie = window.myPreferences.favSpecies;\n        var affiliation = window.myPreferences.favAffiliation;\n        // var homeworld= window.myPreferences.favHomeworld;\n\n        // Mass between 20 and 50\n        // filteredResults = this.state.starWarsPersons.filter(element => {\n        //     return element.mass > 20 && element.mass < 50;\n        // });\n\n        // Filter by specie\n\n        // filteredResults = this.state.starWarsPersons.filter(person => {\n        //     return person.species.includes(specie);\n\n        // });\n\n        // Filter by affiliation\n        filteredResults = this.state.starWarsPersons.filter(person => {\n            return person.affiliations.includes(affiliation);\n        });\n\n        this.setState({\n            matches: filteredResults\n        });\n    }\n\n    render() {\n        console.log(this.state.match)\n        return (\n            <div>\n                <h1>Hello <ActualUser /> you got these options:</h1>\n                {this.state.matches.map((element) => {\n                    return (\n                        <ul>\n                            <li> Name: {(element.name)} </li>\n                            <li>Species: {(element.species)} </li>\n\n                            <li> \n                                    <ul>Affiliations:\n                   \n                                    {\n                                    [element.affiliations].map((item) =>\n                                    { return (<li className='affiliations'> {item}</li>) })\n                                    }                                  \n                                \n                                    </ul>                           \n                            </li>\n                            <li>mass: {(element.mass)}kg </li>\n                        </ul>\n                    )\n                })}\n\n\n            </div>\n        )\n    }\n\n\n\n}\n\n\nexport default Match;"]},"metadata":{},"sourceType":"module"}