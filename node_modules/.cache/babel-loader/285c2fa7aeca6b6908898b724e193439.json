{"ast":null,"code":"import _toConsumableArray from\"/home/raquel/Wild code school/meus/Imperial-love/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/raquel/Wild code school/meus/Imperial-love/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/raquel/Wild code school/meus/Imperial-love/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/raquel/Wild code school/meus/Imperial-love/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/raquel/Wild code school/meus/Imperial-love/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/raquel/Wild code school/meus/Imperial-love/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Dropdown,Button,Container}from'react-bootstrap';import ActualUser from'./ActualUser.js';var Preferences=/*#__PURE__*/function(_Component){_inherits(Preferences,_Component);function Preferences(props){var _this;_classCallCheck(this,Preferences);_this=_possibleConstructorReturn(this,_getPrototypeOf(Preferences).call(this,props));_this.getPersons=function(){fetch('https://melroune.github.io/starwars-api/api/all.json').then(function(response){return response.json();}).then(function(result){_this.setState({starWarsPersons:result,isLoading:false,isError:false});},function(error){_this.setState({isLoading:false,isError:true});});};_this.selectSpecies=function(eventKey){_this.setState({favSpecies:eventKey});};_this.selectAffiliation=function(eventKey){_this.setState({favAffiliation:eventKey});};_this.selectHomeworld=function(eventKey){_this.setState({favHomeworld:eventKey});};_this.state={starWarsPersons:[],favSpecies:[],favAffiliation:[],favHomeworld:[],favMass:[]};return _this;}_createClass(Preferences,[{key:\"componentDidMount\",value:function componentDidMount(){this.getPersons();console.log(this.starWarsPersons);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){window.myPreferences=this.state;}},{key:\"render\",value:function render(){console.log(this.state);return React.createElement(Container,{className:\"preferences\"},React.createElement(\"h4\",null,\"Hello \",React.createElement(ActualUser,null),\" Choose the Affiliation you prefer:\"),React.createElement(\"div\",null,React.createElement(Dropdown,{onSelect:this.selectAffiliation},React.createElement(Dropdown.Toggle,{variant:\"success\",id:\"dropdown-basic\"},\"Favorite Affiliation\"),React.createElement(Dropdown.Menu,{onSelect:this.selectAffiliation},_toConsumableArray(new Set(this.state.starWarsPersons.map(function(element){return element.affiliations;}).reduce(function(acc,elem){return acc.concat(elem);},[]))).sort().map(function(aff){return React.createElement(Dropdown.Item,{name:\"favAffiliation\",eventKey:aff},aff,\";\");}))),React.createElement(\"p\",{className:\"favspecie\"},this.state.favAffiliation)),React.createElement(Button,{variant:\"primary\",href:\"#match\"},\"check your matches\"));}}]);return Preferences;}(Component);export default Preferences;","map":{"version":3,"sources":["/home/raquel/Wild code school/meus/Imperial-love/src/Preferences.js"],"names":["React","Component","Dropdown","Button","Container","ActualUser","Preferences","props","getPersons","fetch","then","response","json","result","setState","starWarsPersons","isLoading","isError","error","selectSpecies","eventKey","favSpecies","selectAffiliation","favAffiliation","selectHomeworld","favHomeworld","state","favMass","console","log","window","myPreferences","Set","map","element","affiliations","reduce","acc","elem","concat","sort","aff"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Button, Container } from 'react-bootstrap';\nimport ActualUser from './ActualUser.js';\n\n\n\nclass Preferences extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            starWarsPersons: [],\n            favSpecies: [],\n            favAffiliation: [],\n            favHomeworld: [],\n            favMass: [],\n\n        }\n    }\n\n    componentDidMount() {\n        this.getPersons();\n        console.log(this.starWarsPersons)\n    }\n\n    getPersons = () => {\n        fetch('https://melroune.github.io/starwars-api/api/all.json')\n            .then(response => response.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        starWarsPersons: result,\n                        isLoading: false,\n                        isError: false,\n\n                    });\n\n                },\n                (error) => {\n                    this.setState({\n                        isLoading: false,\n                        isError: true\n                    });\n                }\n            )\n    }\n\n    selectSpecies = (eventKey) => {\n        this.setState({\n            favSpecies: eventKey\n        });\n    }\n\n    selectAffiliation = (eventKey) => {\n        this.setState({\n            favAffiliation: eventKey\n        });\n    }\n\n    selectHomeworld = (eventKey) => {\n        this.setState({\n            favHomeworld: eventKey\n        });\n    }\n\n    componentDidUpdate() {\n        window.myPreferences = this.state;\n    }\n\n    render() {\n        console.log(this.state)\n\n        return (\n            <Container className='preferences'>\n                <h4>Hello <ActualUser /> Choose the Affiliation you prefer:</h4>\n                {/* <div> */}\n                    {/* <Dropdown onSelect={this.selectSpecies}>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" >\n                            Favorite Species\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu onSelect={this.selectSpecies}>\n                            {[...new Set(this.state.starWarsPersons.map(element => element.species))].sort().map((specie) => (\n                                <Dropdown.Item name='favSpecies' eventKey={specie}>{specie};</Dropdown.Item>\n\n                            ))};\n\n                        </Dropdown.Menu>\n                    </Dropdown> */}\n                    {/* <p className='favspecie'>{this.state.favSpecies}</p> */}\n                {/* </div> */}\n\n                <div>\n                    <Dropdown onSelect={this.selectAffiliation}>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Favorite Affiliation\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu onSelect={this.selectAffiliation}>\n                            {[...new Set(this.state.starWarsPersons\n                                .map(element => element.affiliations)\n                                .reduce((acc, elem) => {\n                                    return acc.concat(elem);\n                                }, []))]\n                                .sort()\n                                .map(aff => (\n                                    <Dropdown.Item name='favAffiliation' eventKey={aff}>{aff};</Dropdown.Item>\n                                ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <p className='favspecie'>{this.state.favAffiliation}</p>\n                </div>\n                {/* <div>\n                    <Dropdown onSelect={this.selectHomeworld}>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Favorite Home World\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu onSelect={this.selectHomeworld}>\n                            {[...new Set(this.state.starWarsPersons.map(element => element.homeworld)\n                                .reduce((acc, elem) => {\n                                    return acc.concat(elem);\n                                }, []))]\n                                .filter(elem => elem !== undefined)\n                                .sort(function (a, b) {\n                                    var nameA = a.toUpperCase(); // ignore upper and lowercase\n                                    var nameB = b.toUpperCase(); // ignore upper and lowercase\n                                    if (nameA < nameB) {\n                                        return -1;\n                                    }\n                                    if (nameA > nameB) {\n                                        return 1;\n                                    }\n\n                                    // names must be equal\n                                    return 0;\n                                }).map((homeworld) => (\n                                    <Dropdown.Item name='favHomeworld' eventKey={homeworld}>{homeworld};</Dropdown.Item>\n                                ))};\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <p className='favspecie'>{this.state.favHomeworld}</p>\n                </div> */}\n                <Button variant=\"primary\" href='#match' >check your matches</Button>\n            </Container>\n        );\n    }\n}\n\n\nexport default Preferences;"]},"metadata":{},"sourceType":"module"}