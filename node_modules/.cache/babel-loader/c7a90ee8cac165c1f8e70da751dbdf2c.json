{"ast":null,"code":"var _jsxFileName = \"/home/raquel/Wild code school/meus/my-app/src/Preferences.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, Button, Container } from 'react-bootstrap';\nimport ActualUser from './ActualUser.js';\n\nclass Preferences extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPersons = () => {\n      fetch('https://melroune.github.io/starwars-api/api/all.json').then(response => response.json()).then(result => {\n        this.setState({\n          starWarsPersons: result,\n          isLoading: false,\n          isError: false\n        });\n      }, error => {\n        this.setState({\n          isLoading: false,\n          isError: true\n        });\n      });\n    };\n\n    this.selectSpecies = eventKey => {\n      this.setState({\n        favSpecies: eventKey\n      });\n    };\n\n    this.selectAffiliation = eventKey => {\n      this.setState({\n        favAffiliation: eventKey\n      });\n    };\n\n    this.selectHomeworld = eventKey => {\n      this.setState({\n        favHomeworld: eventKey\n      });\n    };\n\n    this.state = {\n      starWarsPersons: [],\n      favSpecies: [],\n      favAffiliation: [],\n      favHomeworld: [],\n      favMass: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPersons();\n  }\n\n  componentDidUpdate() {\n    window.myPreferences = this.state;\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Hello \", React.createElement(ActualUser, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \" choose your preferences\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onSelect: this.selectSpecies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Favorite Species\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, [...new Set(this.state.starWarsPersons.map(element => element.species))].sort().map(specie => React.createElement(Dropdown.Item, {\n      name: \"favSpecies\",\n      eventKey: specie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, specie)), \";\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onSelect: this.selectAffiliation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Favorite Affiliation\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, [...new Set(this.state.starWarsPersons.map(element => element.affiliations).reduce((acc, elem) => {\n      return acc.concat(elem);\n    }, []))].sort().map(aff => React.createElement(Dropdown.Item, {\n      name: \"favAffiliation\",\n      eventKey: aff,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, aff))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onSelect: this.selectHomeworld,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Favorite Home World\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, console.log([...new Set(this.state.starWarsPersons.map(element => element.homeworld).reduce((acc, elem) => {\n      return acc.concat(elem);\n    }, []))].filter(elem => elem !== undefined)), [...new Set(this.state.starWarsPersons.map(element => element.homeworld).reduce((acc, elem) => {\n      return acc.concat(elem);\n    }, []))].filter(elem => elem !== undefined).sort(function (a, b) {\n      var nameA = a.toUpperCase(); // ignore upper and lowercase\n\n      var nameB = b.toUpperCase(); // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      } // names must be equal\n\n\n      return 0;\n    }).map(homeworld => React.createElement(Dropdown.Item, {\n      name: \"favHomeworld\",\n      eventKey: homeworld,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, homeworld)), \";\"))), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Preferences;","map":{"version":3,"sources":["/home/raquel/Wild code school/meus/my-app/src/Preferences.js"],"names":["React","Component","Dropdown","Button","Container","ActualUser","Preferences","constructor","props","getPersons","fetch","then","response","json","result","setState","starWarsPersons","isLoading","isError","error","selectSpecies","eventKey","favSpecies","selectAffiliation","favAffiliation","selectHomeworld","favHomeworld","state","favMass","componentDidMount","componentDidUpdate","window","myPreferences","render","Set","map","element","species","sort","specie","affiliations","reduce","acc","elem","concat","aff","console","log","homeworld","filter","undefined","a","b","nameA","toUpperCase","nameB"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Button, Container } from 'react-bootstrap';\nimport ActualUser from './ActualUser.js';\n\n\n\nclass Preferences extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            starWarsPersons: [],\n            favSpecies: [],\n            favAffiliation: [],\n            favHomeworld: [],\n            favMass: [],\n\n        }\n    }\n\n    componentDidMount() {\n        this.getPersons();\n    }\n\n    getPersons = () => {\n        fetch('https://melroune.github.io/starwars-api/api/all.json')\n            .then(response => response.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        starWarsPersons: result,\n                        isLoading: false,\n                        isError: false,\n\n                    });\n\n                },\n                (error) => {\n                    this.setState({\n                        isLoading: false,\n                        isError: true\n                    });\n                }\n            )\n    }\n\n    selectSpecies = (eventKey) => {\n        this.setState({\n            favSpecies: eventKey\n        });\n    }\n\n    selectAffiliation = (eventKey) => {\n        this.setState({\n            favAffiliation: eventKey\n        });\n    }\n\n    selectHomeworld = (eventKey) => {\n        this.setState({\n            favHomeworld: eventKey\n        });\n    }\n\n    componentDidUpdate() {\n        window.myPreferences = this.state;\n    }\n\n    render() {\n\n        return (\n            <Container>\n                <h1>Hello <ActualUser /> choose your preferences</h1>\n                <div>\n                    <Dropdown onSelect={this.selectSpecies}>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Favorite Species\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu >\n                            {[...new Set(this.state.starWarsPersons.map(element => element.species))].sort().map((specie) => (\n                                <Dropdown.Item name='favSpecies' eventKey={specie}>{specie}</Dropdown.Item>\n                            ))};\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                <div>\n                    <Dropdown onSelect={this.selectAffiliation}>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Favorite Affiliation\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {[...new Set(this.state.starWarsPersons\n                                .map(element => element.affiliations)\n                                .reduce((acc, elem) => {\n                                    return acc.concat(elem);\n                                }, []))]\n                                .sort()\n                                .map(aff => (\n                                    <Dropdown.Item name='favAffiliation' eventKey={aff}>{aff}</Dropdown.Item>\n                                ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n\n                </div>\n                <div>\n                    <Dropdown onSelect={this.selectHomeworld}>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Favorite Home World\n             </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {console.log([...new Set(this.state.starWarsPersons.map(element => element.homeworld)\n                                .reduce((acc, elem) => {\n                                    return acc.concat(elem);\n                                }, []))]\n                                .filter(elem => elem !== undefined))}\n                            {[...new Set(this.state.starWarsPersons.map(element => element.homeworld)\n                                .reduce((acc, elem) => {\n                                    return acc.concat(elem);\n                                }, []))]\n                                .filter(elem => elem !== undefined)\n                                .sort(function (a, b) {\n                                    var nameA = a.toUpperCase(); // ignore upper and lowercase\n                                    var nameB = b.toUpperCase(); // ignore upper and lowercase\n                                    if (nameA < nameB) {\n                                        return -1;\n                                    }\n                                    if (nameA > nameB) {\n                                        return 1;\n                                    }\n\n                                    // names must be equal\n                                    return 0;\n                                }).map((homeworld) => (\n                                    <Dropdown.Item name='favHomeworld' eventKey={homeworld}>{homeworld}</Dropdown.Item>\n                                ))};\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Container>\n        );\n    }\n}\n\n\nexport default Preferences;"]},"metadata":{},"sourceType":"module"}