{"ast":null,"code":"var _jsxFileName = \"/home/raquel/Wild code school/meus/star-love/src/Match.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport ActualUser from './ActualUser.js';\n\nclass Match extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPersons = () => {\n      fetch('https://melroune.github.io/starwars-api/api/all.json').then(response => response.json()).then(result => {\n        this.setState({\n          starWarsPersons: result,\n          isLoading: false,\n          isError: false\n        }, this.findMatches);\n      }, error => {\n        this.setState({\n          isLoading: false,\n          isError: true\n        });\n      });\n    };\n\n    this.findMatches = () => {\n      // Find all matches that fit into the criteria\n      // Store it on this.state.matches\n      var filteredResults;\n      var affiliation = window.myPreferences.favAffiliation;\n      var specie = window.myPreferences.favSpecies;\n      var homeworld = window.myPreferences.favHomeworld; // Mass between 20 and 50\n      // filteredResults = this.state.starWarsPersons.filter(element => {\n      //     return element.mass > 20 && element.mass < 50;\n      // });\n      // Filter by name\n\n      var lowerCaseName = specie.toLowerCase();\n      filteredResults = this.state.starWarsPersons.filter(person => {\n        return person.affiliation.toLowerCase().includes(lowerCaseName);\n      }); // Filter by affiliation\n      // filteredResults = this.state.starWarsPersons.filter(person => {\n      //     return person.affiliations.includes(affiliation);\n      // });\n\n      this.setState({\n        matches: filteredResults\n      });\n    };\n\n    this.state = {\n      starWarsPersons: [],\n      matches: [],\n      isLoading: true,\n      isError: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(window.myPreferences);\n    this.getPersons();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Hello \", React.createElement(ActualUser, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \" you got these options:\"), this.state.matches.map(element => {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" name: \", element.name, \" \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"species: \", element.species, \" \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" \", [element.affiliations].map(item => {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"affiliations: \", item));\n      }), \" \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"mass: \", element.mass, \"kg \"));\n    }));\n  }\n\n}\n\nexport default Match;","map":{"version":3,"sources":["/home/raquel/Wild code school/meus/star-love/src/Match.js"],"names":["React","Component","ActualUser","Match","constructor","props","getPersons","fetch","then","response","json","result","setState","starWarsPersons","isLoading","isError","findMatches","error","filteredResults","affiliation","window","myPreferences","favAffiliation","specie","favSpecies","homeworld","favHomeworld","lowerCaseName","toLowerCase","state","filter","person","includes","matches","componentDidMount","console","log","render","map","element","name","species","affiliations","item","mass"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport ActualUser from './ActualUser.js';\n\nclass Match extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            starWarsPersons: [],\n            matches: [],\n            isLoading: true,\n            isError: false\n        }\n    }\n\n    componentDidMount() {\n        console.log(window.myPreferences);\n\n        this.getPersons();\n    }\n\n\n\n    getPersons = () => {\n        fetch('https://melroune.github.io/starwars-api/api/all.json')\n            .then(response => response.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        starWarsPersons: result,\n                        isLoading: false,\n                        isError: false,\n                    }, this.findMatches);\n                },\n                (error) => {\n                    this.setState({\n                        isLoading: false,\n                        isError: true\n                    });\n                }\n            )\n    }\n\n    findMatches = () => {\n        // Find all matches that fit into the criteria\n        // Store it on this.state.matches\n\n\n        var filteredResults;\n        var affiliation = window.myPreferences.favAffiliation;\n        var specie = window.myPreferences.favSpecies;\n        var homeworld= window.myPreferences.favHomeworld;\n\n        // Mass between 20 and 50\n        // filteredResults = this.state.starWarsPersons.filter(element => {\n        //     return element.mass > 20 && element.mass < 50;\n        // });\n\n        // Filter by name\n      \n        var lowerCaseName = specie.toLowerCase();\n        filteredResults = this.state.starWarsPersons.filter(person => {\n            return person.affiliation.toLowerCase().includes(lowerCaseName);\n        });\n\n        // Filter by affiliation\n        // filteredResults = this.state.starWarsPersons.filter(person => {\n        //     return person.affiliations.includes(affiliation);\n        // });\n\n        this.setState({\n            matches: filteredResults\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Hello <ActualUser /> you got these options:</h1>\n                {this.state.matches.map((element) => {\n                    return (\n                        <ul>\n                            <li> name: {(element.name)} </li>\n                            <li>species: {(element.species)} </li>\n\n                            <li> {([element.affiliations].map((item) => {\n                                return (\n                                    <ul>\n                                        <li>affiliations: {item}</li>\n\n                                    </ul>)\n                            }\n                            ))\n                            } </li>\n                            <li>mass: {(element.mass)}kg </li>\n                        </ul>\n                    )\n                })}\n\n\n            </div>\n        )\n    }\n\n\n\n}\n\n\nexport default Match;"]},"metadata":{},"sourceType":"module"}